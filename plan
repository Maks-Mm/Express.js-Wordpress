JS (CodePen)

function Posts() {
  const [posts, setPosts] = React.useState([]);
  const [loading, setLoading] = React.useState(true);
  const [error, setError] = React.useState(null);
  const [selectedPost, setSelectedPost] = React.useState(null);

  React.useEffect(() => {
    fetchPosts();
  }, []);

  const fetchPosts = async () => {
    try {
      setLoading(true);
      setError(null);
      const res = await fetch("https://example.com/api/posts"); // Change to your real API
      if (!res.ok) throw new Error("Failed to load posts");
      const data = await res.json();
      setPosts(data);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  if (loading) {
    return (
      <div className="center">
        <div className="loader"></div>
        <p>Loading posts...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="center">
        <p className="error">⚠️ {error}</p>
        <button onClick={fetchPosts}>Try again</button>
      </div>
    );
  }

  if (selectedPost) {
    return (
      <div className="post-container">
        <button className="back-btn" onClick={() => setSelectedPost(null)}>← Back</button>
        <h1 dangerouslySetInnerHTML={{ __html: selectedPost.title.rendered }} />
        <p className="date">{new Date(selectedPost.date).toLocaleDateString()}</p>
        <div
          className="post-content"
          dangerouslySetInnerHTML={{ __html: selectedPost.content.rendered }}
        />
      </div>
    );
  }

  return (
    <div className="posts">
      <h1>Our Blog</h1>
      <p className="subtitle">Latest posts and updates</p>

      {posts.length === 0 ? (
        <p>No posts found.</p>
      ) : (
        posts.map((post) => (
          <div
            key={post.id}
            className="post-card"
            onClick={() => setSelectedPost(post)}
          >
            <h2 dangerouslySetInnerHTML={{ __html: post.title.rendered }} />
            <p className="date">{new Date(post.date).toLocaleDateString()}</p>
            <div
              className="excerpt"
              dangerouslySetInnerHTML={{
                __html:
                  post.excerpt.rendered.length > 200
                    ? post.excerpt.rendered.slice(0, 200) + "..."
                    : post.excerpt.rendered,
              }}
            />
            <button>Read Full Article</button>
          </div>
        ))
      )}
    </div>
  );
}

ReactDOM.createRoot(document.getElementById("root")).render(<Posts />);


---

CSS (CodePen)

Paste this into the CSS section:

body {
  font-family: "Inter", sans-serif;
  background: #f9fafb;
  margin: 0;
  padding: 20px;
  color: #111827;
}

.center {
  text-align: center;
  margin-top: 100px;
}

.loader {
  border: 4px solid #e5e7eb;
  border-top: 4px solid #3b82f6;
  border-radius: 50%;
  width: 36px;
  height: 36px;
  animation: spin 1s linear infinite;
  margin: 0 auto 10px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.error {
  color: #dc2626;
  font-weight: bold;
}

.posts {
  max-width: 700px;
  margin: 0 auto;
}

h1 {
  text-align: center;
  margin-bottom: 0.25em;
}

.subtitle {
  text-align: center;
  color: #6b7280;
  margin-bottom: 2em;
}

.post-card {
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
  padding: 20px;
  margin-bottom: 20px;
  cursor: pointer;
  transition: all 0.3s;
}

.post-card:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);
}

.post-card h2 {
  margin-top: 0;
  color: #111827;
}

.date {
  font-size: 0.875rem;
  color: #6b7280;
  margin-bottom: 1em;
}

.excerpt {
  color: #374151;
  line-height: 1.6;
  margin-bottom: 1em;
}

.post-card button {
  background: #3b82f6;
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: 0.3s;
}

.post-card button:hover {
  background: #1d4ed8;
}

.post-container {
  max-width: 700px;
  margin: 0 auto;
  background: white;
  padding: 30px;
  border-radius: 12px;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
}

.back-btn {
  display: inline-block;
  margin-bottom: 20px;
  background: none;
  border: none;
  color: #3b82f6;
  font-weight: bold;
  cursor: pointer;
}

.post-content img {
  max-width: 100%;
  border-radius: 8px;
  margin: 1em 0;
}

.post-content p {
  line-height: 1.7;
  color: #374151;
}
